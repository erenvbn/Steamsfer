// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Steamsfer.DataAccess.Data;

#nullable disable

namespace Steamsfer.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20230824132714_SeedingUserTable")]
    partial class SeedingUserTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Steamsfer.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DisplayOrder = 1,
                            Name = "Category1"
                        },
                        new
                        {
                            Id = 2,
                            DisplayOrder = 2,
                            Name = "Category2"
                        },
                        new
                        {
                            Id = 3,
                            DisplayOrder = 3,
                            Name = "Category3"
                        });
                });

            modelBuilder.Entity("Steamsfer.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserRoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserRoleId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "erenvbn@gmail.com",
                            Password = "12345678",
                            UserName = "erenvbn",
                            UserRoleId = 1
                        },
                        new
                        {
                            Id = 2,
                            Email = "erenvbn2@gmail.com",
                            Password = "12345678",
                            UserName = "benguvbn",
                            UserRoleId = 2
                        },
                        new
                        {
                            Id = 3,
                            Email = "erenvbn3@gmail.com",
                            Password = "12345678",
                            UserName = "emrevbn",
                            UserRoleId = 3
                        });
                });

            modelBuilder.Entity("Steamsfer.Models.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Administrator role with full access to all database objects",
                            Role = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Logged in user",
                            Role = "User"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Guest users without logging in",
                            Role = "Guest"
                        });
                });

            modelBuilder.Entity("Steamsfer.Models.User", b =>
                {
                    b.HasOne("Steamsfer.Models.UserRole", "UserRole")
                        .WithMany()
                        .HasForeignKey("UserRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserRole");
                });
#pragma warning restore 612, 618
        }
    }
}
